// This file is auto-generated by @hey-api/openapi-ts

import type { CancelablePromise } from './core/CancelablePromise';
import { OpenAPI } from './core/OpenAPI';
import { request as __request } from './core/request';
import type { LoginApiLoginPostData, LoginApiLoginPostResponse, RegisterApiRegisterPostData, RegisterApiRegisterPostResponse, UserApiUserPostData, UserApiUserPostResponse, InfoApiInfoPostData, InfoApiInfoPostResponse, SubmitInfoApiSubmitInfoPostData, SubmitInfoApiSubmitInfoPostResponse, SubmitAvatarApiSubmitAvatarPostData, SubmitAvatarApiSubmitAvatarPostResponse, AvatarApiAvatarPostData, AvatarApiAvatarPostResponse, SubmitReportApiSubmitReportPostData, SubmitReportApiSubmitReportPostResponse, GetReportsApiGetReportsPostData, GetReportsApiGetReportsPostResponse, ReportImagesApiReportImagesPostData, ReportImagesApiReportImagesPostResponse, DeleteReportApiReportDeletePostData, DeleteReportApiReportDeletePostResponse, GetReportDetailApiReportDetailPostData, GetReportDetailApiReportDetailPostResponse, ImageApiImagePostResponse, GetImageApiImageGetPostData, GetImageApiImageGetPostResponse, DoctorsApiDoctorsPostData, DoctorsApiDoctorsPostResponse, DoctorInfoApiDoctorInfoPostData, DoctorInfoApiDoctorInfoPostResponse } from './types.gen';

/**
 * Login
 * @param data The data for the request.
 * @param data.requestBody
 * @returns LoginResponse Successful Response
 * @throws ApiError
 */
export const loginApiLoginPost = (data: LoginApiLoginPostData): CancelablePromise<LoginApiLoginPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/login',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Register
 * @param data The data for the request.
 * @param data.requestBody
 * @returns LoginResponse Successful Response
 * @throws ApiError
 */
export const registerApiRegisterPost = (data: RegisterApiRegisterPostData): CancelablePromise<RegisterApiRegisterPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/register',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * User
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const userApiUserPost = (data: UserApiUserPostData): CancelablePromise<UserApiUserPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/user',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Info
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const infoApiInfoPost = (data: InfoApiInfoPostData): CancelablePromise<InfoApiInfoPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/info',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Submitinfo
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const submitInfoApiSubmitInfoPost = (data: SubmitInfoApiSubmitInfoPostData): CancelablePromise<SubmitInfoApiSubmitInfoPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/submitInfo',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Submitavatar
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const submitAvatarApiSubmitAvatarPost = (data: SubmitAvatarApiSubmitAvatarPostData): CancelablePromise<SubmitAvatarApiSubmitAvatarPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/submitAvatar',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Avatar
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const avatarApiAvatarPost = (data: AvatarApiAvatarPostData): CancelablePromise<AvatarApiAvatarPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/avatar',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Submitreport
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const submitReportApiSubmitReportPost = (data: SubmitReportApiSubmitReportPostData): CancelablePromise<SubmitReportApiSubmitReportPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/submitReport',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Getreports
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getReportsApiGetReportsPost = (data: GetReportsApiGetReportsPostData): CancelablePromise<GetReportsApiGetReportsPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/getReports',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Reportimages
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const reportImagesApiReportImagesPost = (data: ReportImagesApiReportImagesPostData): CancelablePromise<ReportImagesApiReportImagesPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/report/images',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Deletereport
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const deleteReportApiReportDeletePost = (data: DeleteReportApiReportDeletePostData): CancelablePromise<DeleteReportApiReportDeletePostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/report/delete',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Getreportdetail
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getReportDetailApiReportDetailPost = (data: GetReportDetailApiReportDetailPostData): CancelablePromise<GetReportDetailApiReportDetailPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/report/detail',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Image
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const imageApiImagePost = (): CancelablePromise<ImageApiImagePostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/image'
    });
};

/**
 * Getimage
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const getImageApiImageGetPost = (data: GetImageApiImageGetPostData): CancelablePromise<GetImageApiImageGetPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/image/get',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Doctors
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const doctorsApiDoctorsPost = (data: DoctorsApiDoctorsPostData): CancelablePromise<DoctorsApiDoctorsPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/doctors',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};

/**
 * Doctorinfo
 * @param data The data for the request.
 * @param data.requestBody
 * @returns unknown Successful Response
 * @throws ApiError
 */
export const doctorInfoApiDoctorInfoPost = (data: DoctorInfoApiDoctorInfoPostData): CancelablePromise<DoctorInfoApiDoctorInfoPostResponse> => {
    return __request(OpenAPI, {
        method: 'POST',
        url: '/api/doctor/info',
        body: data.requestBody,
        mediaType: 'application/json',
        errors: {
            422: 'Validation Error'
        }
    });
};